# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI/CD

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew clean build
      
    - name: docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/springboot_bbs:latest .

    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/springboot_bbs:latest

    - name: transfer docker compose file
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_SECRET_KEY }}
        passphrase: ${{ secrets.SSH_SECRET_PASSPHRASE }}
        username: ${{ secrets.SSH_HOST_NAME }}
        source: "docker-compose.yaml"
        target: "/home/${{ secrets.SSH_DIRECTORY }}/springboot-bbs"

    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_SECRET_KEY }}
        passphrase: ${{ secrets.SSH_SECRET_PASSPHRASE }}
        username: ${{ secrets.SSH_HOST_NAME }}
        script: |
          cd /home/${{ secrets.SSH_DIRECTORY }}/springboot-bbs
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/springboot_bbs:latest
          docker-compose down
          docker-compose up -d
          docker exec -it springboot_bbs java -jar springboot.jar
          docker image prune -f
